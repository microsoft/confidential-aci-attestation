name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev/* ]
  workflow_dispatch:
    inputs:
      tag:
        description: 'The tag to use for the release'
        required: true
        type: string
  workflow_call:
    inputs:
      tag:
        description: 'The tag to use for the release'
        required: true
        type: string


env:
  SUBSCRIPTION: ${{ vars.SUBSCRIPTION }}
  RESOURCE_GROUP: ${{ vars.RESOURCE_GROUP }}
  LOCATION: ${{ vars.LOCATION }}
  REGISTRY: ${{ vars.REGISTRY }}
  MANAGED_IDENTITY: ${{ vars.MANAGED_IDENTITY }}
  TAG: ${{ inputs.tag || format('ci-{0}', github.run_id) }}

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: make lint

  unit:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - run: make test-unit

  system:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - run: make test-system

  docker:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - run: make test-docker

  server:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - run: make test-server

  python:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - run: make test-python

  aci:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - uses: azure/login@v2
      with:
        client-id: ${{ secrets.MANAGED_ID_CLIENT_ID }}
        tenant-id: ${{ secrets.MANAGED_ID_TENANT_ID }}
        subscription-id: ${{ vars.SUBSCRIPTION }}
    - run: make test-aci

  coverage:
    runs-on: ubuntu-latest
    needs: [unit, system, docker, server, python, aci]
    steps:
    - uses: actions/checkout@v4
    - run: make coverage

  address-sanitizer:
    runs-on: ubuntu-latest
    needs: [unit, system, docker, server, python, aci]
    steps:
    - uses: actions/checkout@v4
    - run: make asan
